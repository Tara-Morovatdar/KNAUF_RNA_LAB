# This is a basic workflow to help you get started with Actions

name: cicd-dev

# Controls when the workflow will run
on:
  workflow_dispatch:
#run only when the pull request is closed and it targets main branch
  # pull_request:
  #   types: closed
#   branches:
#     - main
#     paths-ignore:
#       - '.github/**'
#       - 'build/**'
#       - 'README.md'
#       - 'CODEOWNERS'

  # Allows you to run this workflow manually from the Actions tab
permissions:
      id-token: write
      contents: write
      packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate build name with timestamp
        id: buildname
        run: |
          echo "BUILD_NAME=build-adf-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      - name: Print build name
        run: |
          echo "The build name is ${{ env.BUILD_NAME }}"

      # Installs Node and the npm packages saved in your package.json file in the build
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 14.x

      #Caching (you have to  repeat this step everytime before the install job so it uses the cache)
      - name: cache dependencies
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-$${{ hashFiles('**/package-lock.json')}}  

      - name: install ADF Utilities package
        run: npm install
        working-directory: ${{github.workspace}}/build  # (1) provide the folder location of the package.json file

  # Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
      - name: Validate
        run: npm run build validate ${{github.workspace}}/ /subscriptions/73d4603c-76cc-4e1b-bed0-a3780c55b193/resourceGroups/ADF_LAB_KNAUF/providers/Microsoft.DataFactory/factories/DatafactoryForKnaufDemo 
        # (2) The validate command needs the root folder location of your repository where all the objects are stored. And the 2nd parameter is the resourceID of the ADF instance 
        working-directory: ${{github.workspace}}/build
  

      - name: Validate and Generate ARM template
        run: npm run build export ${{github.workspace}}/ /subscriptions/73d4603c-76cc-4e1b-bed0-a3780c55b193/resourceGroups/ADF_LAB_KNAUF/providers/Microsoft.DataFactory/factories/DatafactoryForKnaufDemo ${{ env.BUILD_NAME }}  # (3) The build command, as validate, needs the root folder location of your repository where all the objects are stored. And the 2nd parameter is the resourceID of the ADF instance. The 3rd parameter is the exported ARM template artifact name 
        working-directory: ${{github.workspace}}/build
  
  # In order to leverage the artifact in another job, we need to upload it with the upload action 
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_NAME }} # (4) use the same artifact name you used in the previous export step
          path: ${{github.workspace}}/build/${{ env.BUILD_NAME }} 
      - name: list uploaded files
        run : ls


      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ env.BUILD_NAME }} # (5) Artifact name     
      - name: commit the built artifact
        uses: EndBug/add-and-commit@v9
        with:
#           author_name: Tara
#           author_email: t.morovatdar@gmail.com
          # Additional arguments for the git commit command. The --message argument is already set by the message input.
          # Default: ''
          message: 'commit artifact ${{ env.BUILD_NAME }}'
          #push: true
      - name: Notify Success
        if: success()
        run: echo "Artifact successfully built and deployed to Dev environment."
